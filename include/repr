#pragma once
#include <string>

#include <librepr/type_info.h>
#include <librepr/repr.h>

#include <type_traits>

namespace librepr {
struct ReprWrapper {
  template <typename T>
  std::string operator()(T const& obj, bool with_type = true, bool explicit_types = false) const {
    //TODO this could be static once msvc supports it
    return librepr::TypeInfo<T>::dump(obj, with_type, explicit_types);
  }
};


}  // namespace librepr


inline constexpr librepr::ReprWrapper repr {};

template <typename T>
inline constexpr librepr::TypeName<T> nameof {};

template <typename T>
inline constexpr librepr::TypeInfo<T> typeinfo {};